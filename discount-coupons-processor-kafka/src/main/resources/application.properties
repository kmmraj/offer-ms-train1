#%dev.quarkus.http.port=8081

#%prod.kafka.bootstrap.servers=kafka-service:9092
%prod.kafka.bootstrap.servers=${KAFKA_SVCNAME:kafka-service}:${KAFKA_PORT:9092}
# Go bad to the first records, if it's out first access
kafka.auto.offset.reset=earliest

# Set theKafka topic, as it's not the channel name
mp.messaging.incoming.disco-requests.topic = disco-requests

# Configure the outgoing `discocopons` Kafka topic
mp.messaging.outgoing.discocoupons.value.serializer=io.quarkus.kafka.client.serialization.ObjectMapperSerializer


###---------------------------------------------
### k8s config START
###---------------------------------------------
quarkus.container-image.registry=docker.io
quarkus.container-image.group=kmmraj
quarkus.container-image.name=discount-coupons-processor-kafka
quarkus.container-image.tag=1.0.0
quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.service-type=ClusterIP
quarkus.kubernetes.image-pull-policy=Always
###---------------------------------------------
### k8s config END
###---------------------------------------------

### ------------------------------------
### k8s - Environment Variables - Start
### ------------------------------------
quarkus.kubernetes.env.mapping."kafka-svcname".from-configmap=disco-config-map
quarkus.kubernetes.env.mapping."kafka-svcname".with-key=KAFKA_SVCNAME
quarkus.kubernetes.env.mapping."kafka-port".from-configmap=disco-config-map
quarkus.kubernetes.env.mapping."kafka-port".with-key=KAFKA_PORT

### ------------------------------------
### k8s - Environment Variables - End
### ------------------------------------