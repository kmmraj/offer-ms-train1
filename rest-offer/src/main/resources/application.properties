offer.default.travel.days=20


#quarkus.http.port=8085
%dev.quarkus.http.port=8087
%test.quarkus.http.port=8089

quarkus.log.console.darken=0
quarkus.log.console.format=%d{HH:mm:ss} %-5p line=%L traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

quarkus.jaeger.service-name=mservices.offer
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1


#openid connect

#quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/cid-authcode-pkce-grant-realm
#quarkus.oidc-client.discovery-enabled=true
#quarkus.oidc-client.grant.type=client
#quarkus.oidc.client-id=backend-service
#quarkus.http.auth.permission.authenticated.paths=/*
#quarkus.http.auth.permission.authenticated.policy=authenticated
#quarkus.oauth2.role-claim=scope

#quarkus.log.category."io.quarkus.oidc".min-level=TRACE
#quarkus.log.category."io.quarkus.oidc".level=TRACE


# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = ${OFR_USERNAME:postgres}
quarkus.datasource.password = ${OFR_PASSWORD:mysecretpassword}
quarkus.datasource.jdbc.url = jdbc:postgresql://${OFR_HOSTNAME:localhost}:${OFR_PORT:5432}/${OFR_DBNAME:offerdb}
# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=drop-and-create

#TODO: Fix the below
#quarkus dev -Dquarkus.profile=dev-with-data
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%dev.quarkus.hibernate-orm.sql-load-script = insert_offer.sql

%dev-with-data.quarkus.hibernate-orm.database.generation = update
%dev-with-data.quarkus.hibernate-orm.sql-load-script = insert_offer.sql

%prod.quarkus.hibernate-orm.database.generation = drop-and-create
%prod.quarkus.hibernate-orm.sql-load-script = insert_offer.sql

#K8s
quarkus.container-image.registry=docker.io
quarkus.container-image.group=kmmraj
quarkus.container-image.name=offer-api
quarkus.container-image.tag=1.1.10
quarkus.container-image.build=true
quarkus.container-image.push=true
quarkus.kubernetes.deployment-target=kubernetes
quarkus.kubernetes.service-type = LoadBalancer
quarkus.kubernetes.image-pull-policy=Always

# OpenAPI Proxy
offer-price.proxy/mp-rest/uri=http://localhost:8097

# Grpc Configurations
quarkus.grpc.clients.offerprice.host=offer-price-api
quarkus.grpc.clients.offerprice.port=9010
