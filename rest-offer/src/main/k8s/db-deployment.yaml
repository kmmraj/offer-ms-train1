apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    io.kompose.service: pg-db
  name: pg-db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: pg-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        io.kompose.service: pg-db
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: offer-api-secret
                  key: OFR_PASSWORD
            - name: POSTGRES_USER
             # value: postgres
              valueFrom:
                  configMapKeyRef:
                    name: offer-api-config-map
                    key: OFR_USERNAME
          image: postgres:14.1-alpine
          name: db
          ports:
            - containerPort: 5432
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              subPath: pgdata
              name: pg-database-data-volume
      restartPolicy: Always
      volumes:
        - name: pg-database-data-volume
          persistentVolumeClaim:
            claimName: pg-database-data-volume
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: pg-database-data-volume
  name: pg-database-data-volume
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    io.kompose.service: pg-db
  name: pg-db
spec:
  type: ClusterIP
  ports:
    - name: "5432"
      port: 5432
      targetPort: 5432
  selector:
    io.kompose.service: pg-db